name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: [types, linting, unit-tests]
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v5

      - name: Extract python version
        id: python-version
        run: |
          python_version=$(grep '^python =' pyproject.toml | awk -F'"' '{print $2}')
          echo "python-version=$python_version" >> $GITHUB_OUTPUT

      - name: Set up python version
        uses: actions/setup-python@v6
        with:
          python-version: ${{ steps.python-version.outputs.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up cache
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.python-version.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run static type checking
        if: matrix.check == 'types'
        run: poetry run mypy src

      - name: Run linters
        if: matrix.check == 'linting'
        run: poetry run ruff check src --preview

      - name: Run tests
        if: matrix.check == 'unit-tests'
        run: poetry run pytest --cov-fail-under=75

      # - name: Prefect login
      #   run: poetry run prefect cloud login -k ${{ secrets.PREFECT_API_KEY }} -w ${{ secrets.PREFECT_API_WORKSPACE }}
